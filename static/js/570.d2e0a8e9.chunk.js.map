{"version":3,"file":"static/js/570.d2e0a8e9.chunk.js","mappings":"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","sources":["redux/contacts/phoneBookSelectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["export const getContacts = state => state.contacts.contacts.items;\nexport const getIsLoading = state => state.contacts.contacts.isLoading;\nexport const getError = state => state.contacts.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"contactFormLabel\":\"ContactForm_contactFormLabel__16ABo\",\"contactFormInput\":\"ContactForm_contactFormInput__eC5HJ\",\"contactFormButton\":\"ContactForm_contactFormButton__gvoPv\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/phoneBookOperations';\nimport { getContacts } from 'redux/contacts/phoneBookSelectors';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onAddContact();\n    evt.currentTarget.children[2].blur();\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onAddContact = () => {\n    const newContact = { name, number };\n\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\n        return alert(`${name} is already in contacts`);\n      }\n    }\n    dispatch(addContact(newContact));\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.contactFormLabel}>\n        Name\n        <input\n          className={css.contactFormInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.contactFormLabel}>\n        Number\n        <input\n          className={css.contactFormInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={css.contactFormButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListButton\":\"ContactList_contactListButton__3Tc2d\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/phoneBookOperations';\nimport { getContacts, getFilter } from 'redux/contacts/phoneBookSelectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase().trim()));\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <li className={css.contactListItem} key={id}>\n          <span>{name}</span>\n          <span>{number}</span>\n          <button\n            className={css.contactListButton}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/phoneBookSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.filter}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        onChange={evt => dispatch(filterContacts(evt.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\n\nimport { fetchContacts } from 'redux/contacts/phoneBookOperations';\nimport { getError, getIsLoading } from 'redux/contacts/phoneBookSelectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(getIsLoading);\n  const errorContacts = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoadingContacts && !errorContacts && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","evt","currentTarget","value","reset","onAddContact","newContact","toLowerCase","alert","addContact","className","css","onSubmit","preventDefault","children","blur","type","onChange","pattern","title","required","filteredContacts","contact","includes","trim","map","id","onClick","deleteContact","filterContacts","isLoadingContacts","errorContacts","useEffect","fetchContacts"],"sourceRoot":""}